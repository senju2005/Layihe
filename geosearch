import requests
import sqlite3

# Function to fetch geosearch results from Wikipedia API
def fetch_geosearch_data(latitude, longitude, radius=10000):
    url = f"https://en.wikipedia.org/w/api.php?action=query&list=geosearch&gsradius={radius}&gscoord={latitude}|{longitude}&format=json"
    response = requests.get(url)

    if response.status_code == 200:
        data = response.json()
        if 'query' in data and 'geosearch' in data['query']:
            return data['query']['geosearch']
    else:
        print(f"Error: Unable to fetch geosearch data for coordinates {latitude}, {longitude}")
        return []

# Function to save geosearch data to SQLite database
def save_geosearch_to_db(geosearch_results):
    # Connect to SQLite database (or create it)
    conn = sqlite3.connect('wikipedia_geosearch.db')
    cursor = conn.cursor()

    # Create the table if it doesn't exist
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS geosearch (
            page_id INTEGER PRIMARY KEY,
            title TEXT,
            latitude REAL,
            longitude REAL,
            url TEXT
        )
    ''')

    # Insert the geosearch data into the table
    for result in geosearch_results:
        page_id = result['pageid']
        title = result['title']
        latitude = result['lat']
        longitude = result['lon']
        url = result['url']

        cursor.execute('''
            INSERT OR REPLACE INTO geosearch (page_id, title, latitude, longitude, url)
            VALUES (?, ?, ?, ?, ?)
        ''', (page_id, title, latitude, longitude, url))

    # Commit the changes and close the connection
    conn.commit()
    conn.close()

# Main function to fetch and save geosearch data
def main():
    # Define the coordinates (Latitude, Longitude) and search radius
    latitude = 48.8566  # Latitude of Paris
    longitude = 2.3522  # Longitude of Paris
    radius = 10000  # Search radius in meters (10 km)

    # Fetch geosearch data from Wikipedia API
    geosearch_results = fetch_geosearch_data(latitude, longitude, radius)

    if geosearch_results:
        # Save the fetched geosearch data to the database
        save_geosearch_to_db(geosearch_results)
        print(f"Geosearch data for {len(geosearch_results)} locations saved successfully!")
    else:
        print("No geosearch data found or failed to fetch data.")

# Run the script
if __name__ == "__main__":
    main()
